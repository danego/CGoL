//Scraps CGoL

//mostly to-do with internally storing board as 2d array (& not single array)

/*
function createBoard(width, height) {
    let a = new Array(width);
    for(let i = 0; i < width; i ++) {
        a[i] = new Array(height);
        for(let j=0; j<height; j++) {
            a[i][j] = "-";
        }
    }
    return a;
}
function displayB(arrayBoard) {
    var line = '';
    for (var i =0; i<5; i++) {
        for (var j=0; j<5; j++) {
            line = line + ' ' + arrayBoard[j][i];
        }
        console.log(line);
        line = "";
    }
    console.log('00000000000000');
}
*/

//makeTurn:
//was first "board" param fyi
 //translate board from grid/2D array to one line:
    /*
    var arrayLine = [];
    for(var i =0; i<board.length; i++) {
        for(var j=0; j<board[i].length; j++) {
            arrayLine.push(board[j][i]);
        }
    }
    */
//convert arrayLineResult back to board (same as param)
   /*
   for(var i =0; i < arrayLineResult.length; i++) {
       for(var j =0; j<board.length; j++) {
         board[j][i] = arrayLineResult[i];
       }
   }
   */
   /*array2D.forEach(elem => {
    elem = new Array(3);
    elem.forEach(num => {
        num = increaseSum;
        increaseSum++;
    })
});*/


/*
board[1][3] = 'X';
board[3][1] = 'Y';
board[0][3] = 'X';
board[2][3] = 'X';
console.log(board);

displayB(board);

makeTurn(board);
displayB(board);


board[3][0] = 'X';
board[3][1] = 'X';
board[4][1] = 'X';
displayB(board);
makeTurn(board);
displayB(board);
*/

//testing 2D array layount in JavaScript
var array2D = new Array(3).fill("");
var increaseSum = 0;
for(var i =0; i<3; i++) {
    array2D[i] = new Array(3);
    for(var j =0; j<3; j++) {
        array2D[i][j] = increaseSum;
        increaseSum++;
    }
}
console.log(array2D);
array2D[1][2] = 'X';
console.log(array2D);